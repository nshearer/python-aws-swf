from .SWFEvent import SWFEvent

class ContinueAsNewWorkflowExecutionFailedEvent(SWFEvent):
    '''
    The workflow execution failed to complete after being continued as a new workflow execution.

    'continueAsNewWorkflowExecutionFailedEventAttributes': {
        'cause': 'UNHANDLED_DECISION'|'WORKFLOW_TYPE_DEPRECATED'|'WORKFLOW_TYPE_DOES_NOT_EXIST'|'DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED'|'DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED'|'DEFAULT_TASK_LIST_UNDEFINED'|'DEFAULT_CHILD_POLICY_UNDEFINED'|'CONTINUE_AS_NEW_WORKFLOW_EXECUTION_RATE_EXCEEDED'|'OPERATION_NOT_PERMITTED',
        'decisionTaskCompletedEventId': 123
    },
    '''

    CONTINUE_AS_NEW_WORKFLOW_EXECUTION_RATE_EXCEEDED = 'CONTINUE_AS_NEW_WORKFLOW_EXECUTION_RATE_EXCEEDED'
    DEFAULT_CHILD_POLICY_UNDEFINED = 'DEFAULT_CHILD_POLICY_UNDEFINED'
    DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED = 'DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED'
    DEFAULT_TASK_LIST_UNDEFINED = 'DEFAULT_TASK_LIST_UNDEFINED'
    DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED = 'DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED'
    OPERATION_NOT_PERMITTED = 'OPERATION_NOT_PERMITTED'
    UNHANDLED_DECISION = 'UNHANDLED_DECISION'
    WORKFLOW_TYPE_DEPRECATED = 'WORKFLOW_TYPE_DEPRECATED'
    WORKFLOW_TYPE_DOES_NOT_EXIST = 'WORKFLOW_TYPE_DOES_NOT_EXIST'

    @property
    def cause(self):
        return self._get_data_attr('cause')
    
